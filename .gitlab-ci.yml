stages:
  - build
  - release

image: ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com/dev/vnfs-collector:CI-2025-01-03

variables:
  DOCKER_REGISTRY: ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com
  IMAGE_NAME: ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com/dev/vnfs-collector:${CI_PIPELINE_ID}

before_script:
  - git fetch --unshallow


build_vnfs_collector:
  stage: build
  script: |
    set -x
    make versionfile
    echo "Installing version: $(cat version.txt)"
    python3 -m pip install .[test]
    python3 -m pytest tests/
    LATEST=${DOCKER_REGISTRY}/dev/vnfs-collector:latest
    make docker_build
    docker tag vnfs-collector ${IMAGE_NAME}
    docker tag vnfs-collector ${LATEST}
    docker push ${IMAGE_NAME}
    docker push ${LATEST}
    echo "pushed ${IMAGE_NAME}"
  tags:
    - vast-dev-builder


update_dockerhub:
  stage: release
  script: |
    set -x
    make deb
    VERSION=$(cat version.txt).g$(git rev-parse --short=12 HEAD)
    echo "$DOCKERHUB_PW" | docker login --username "$DOCKERHUB_USER" --password-stdin
    export IMAGE_NAME=docker.io/vastdataorg/vnfs-collector:${VERSION}
    docker buildx rm builder 2>/dev/null || true
    docker buildx create --name builder --use
    docker buildx build -f docker/debian.Dockerfile \
      --build-arg=VERSION="$VERSION" \
      --platform "linux/amd64,linux/arm64" \
      -t ${IMAGE_NAME} \
      --push .
  when: manual
  tags:
    - vast-dev-builder


release_vnfs_collector:
  image:
    name: alpine/git
    entrypoint: [""]
  only:
    - tags
  stage: release
  before_script:
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
  script: |
    set -x
    TAG=$(git describe --tags --abbrev=0)
    TARGET_BRANCH=main
    git remote add github https://oauth2:$GITHUB_TOKEN@github.com/vast-data/vnfs-collector.git || true
    git fetch github $TARGET_BRANCH
    git checkout -B $TARGET_BRANCH
    git push --tags github HEAD:$TARGET_BRANCH
  tags:
    - vast-dev-builder
