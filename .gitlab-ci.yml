stages:
  - build
  - deploy

image: ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com/dev/vnfs-collector:CI-2025-01-03

variables:
  DOCKER_REGISTRY: ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com
  IMAGE_NAME: ${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com/dev/vnfs-collector:${CI_PIPELINE_ID}


build_vnfs_collector:
  stage: build
  script: |
    set -x
    python3 -m pip install .[test]
    python3 -m pytest tests/
    LATEST=${DOCKER_REGISTRY}/dev/vnfs-collector:latest
    make docker_build
    docker tag vnfs-collector ${IMAGE_NAME}
    docker tag vnfs-collector ${LATEST}
    docker push ${IMAGE_NAME}
    docker push ${LATEST}
    echo "pushed ${IMAGE_NAME}"
  tags:
    - vast-dev-builder


update_dockerhub:
  stage: deploy
  script: |
    set -x
    make deb
    VERSION=$(cat version.txt).g$(git rev-parse --short=12 HEAD)
    echo "$DOCKERHUB_PW" | docker login --username "$DOCKERHUB_USER" --password-stdin
    export IMAGE_NAME=docker.io/vastdataorg/vnfs-collector:${VERSION}
    docker buildx create --name builder --use
    docker buildx build -f docker/debian.Dockerfile \
      --build-arg=VERSION="$VERSION" \
      --platform "linux/amd64,linux/arm64" \
      -t ${IMAGE_NAME} \
      --push .
  when: manual
  tags:
    - vast-dev-builder

upload_artifacts_to_s3:
    stage: deploy
    script: |
        set -x
        export AWS_ACCESS_KEY_ID=$S3_AWS_ACCESS_KEY_ID
        export AWS_SECRET_ACCESS_KEY=$S3_AWS_SECRET_ACCESS_KEY
        
        echo "Building RPM and DEB packages"
        make all

        version=$(cat version.txt).g$(git rev-parse --short=12 HEAD)
        rpmfile=vnfs-collector-${version}.noarch.rpm
        debfile=vnfs-collector_${version}_all.deb

        s3_bucket="s3://vast-client-metrics"

        echo "Uploading $rpmfile to $s3_bucket"
        aws s3 cp dist/$rpmfile $s3_bucket/$rpmfile

        echo "Uploading $debfile to $s3_bucket"
        aws s3 cp dist/$debfile $s3_bucket/$debfile

        meta=$(mktemp)
        echo "{\"latest\": \"$version\"}" > $meta
        echo "Uploading meta.json to $s3_bucket"
        aws s3 cp $meta $s3_bucket/meta.json

        rm -f $meta
    when: manual
    tags:
        - vast-dev-builder
